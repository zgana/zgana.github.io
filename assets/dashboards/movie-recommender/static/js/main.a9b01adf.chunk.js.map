{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","title","renderSuggestion","year","ReactGA","initialize","TitleInput","props","onChange","event","newValue","method","setState","value","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","onSelected","onRandomAdd","min","max","n","length","i","Math","ceil","floor","random","state","bind","this","inputProps","placeholder","className","onClickCB","React","Component","HSlider","context","handleChange","onChangeCB","orientation","WeightSlider","RandomAdd","id","onClick","RecList","rec_items","all_titles","items","weight","undefined","indices","map","item","index","tag_vec","Array","from","Set","concat","apply","tags_enc","genre_vec","genres_enc","nconst_vec","nconst_enc","N","scored","tag_v","tag_both","filter","includes","genre_v","genre_both","nconst_v","nconst_both","score","why_tag","why_genre","why_nconst","sort","a","b","slice","getRecommendations","nrecs","x","url","tconst","key","addItem","href","target","rel","metadata","nconsts","join","tags","genres","Main","handleSelected","removeItem","changeWeight","self","all","escapedValue","trim","regex","RegExp","matches","test","indexOf","title_items","App","prefix","fetch","then","titles","json","catch","err","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.a9b01adf.chunk.js","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Slider from 'react-rangeslider'\nimport ReactGA from 'react-ga';\n\n//import logo from './logo.svg';\nimport 'react-rangeslider/lib/index.css'\nimport './App.css';\n\nReactGA.initialize(\"UA-166956768-1\")\n\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n * https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.title;\n}\n\nfunction renderSuggestion(suggestion) {\n  return (\n    <span>{suggestion.title} ({suggestion.year})</span>\n  );\n}\n\nfunction getRecommendations(all_titles, items, n, weight) {\n  if (all_titles === undefined) {\n    return [];\n  }\n  const indices = items.map((item) => item.index);\n  if (indices.length === 0) {\n    return [];\n  }\n  var tag_vec = Array.from(new Set([].concat.apply([], items.map(item => item.tags_enc))));\n  var genre_vec = Array.from(new Set([].concat.apply([], items.map(item => item.genres_enc))));\n  var nconst_vec = Array.from(new Set([].concat.apply([], items.map(item => item.nconst_enc))));\n\n  var N = all_titles.length;\n  var scored = Array(N);\n  for (var i = 0; i < N; i++) {\n    var item = all_titles[i];\n    var tag_v = item.tags_enc;\n    var tag_both = tag_vec.filter(value => tag_v.includes(value));\n    var genre_v = item.genres_enc;\n    var genre_both = genre_vec.filter(value => genre_v.includes(value));\n    var nconst_v = item.nconst_enc;\n    var nconst_both = nconst_vec.filter(value => nconst_v.includes(value));\n    var score = 0;\n    if (!indices.includes(i)) {\n      score = weight[0] * tag_both.length\n            + weight[1] * genre_both.length\n            + weight[2] * nconst_both.length;\n    }\n    scored[i] = {\n      item: item,\n      score: score,\n      why_tag: tag_both,\n      why_genre: genre_both,\n      why_nconst: nconst_both,\n    };\n  }\n  scored = scored.sort((a, b) => b.score - a.score);\n  var out = scored.slice(0, n);\n  return out;\n}\n\n\nclass TitleInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };    \n\n    this.onRandomAdd = this.onRandomAdd.bind(this);\n  }\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.props.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n    this.props.onSelected(suggestion);\n    this.setState({value: \"\"})\n  }\n\n  onRandomAdd = () => {\n    var suggestions = this.props.getSuggestions('', true);\n    var n = suggestions.length;\n    var i = getRandomInt(0, n-1);\n    this.props.onSelected(suggestions[i]);\n  }\n\n  render() {\n    const { value, suggestions } = this.state;\n    const inputProps = {\n      placeholder: \"Enter a movie title.\",\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <div className=\"titleInput\">\n        <Autosuggest \n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n          onSuggestionSelected={this.onSuggestionSelected}\n        /><RandomAdd onClickCB={this.onRandomAdd} />\n      </div>\n    );\n  }\n}\n\n\nclass HSlider extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(value) {\n    this.props.onChangeCB(value);\n  }\n\n  render() {\n    return (\n      <Slider\n        value={this.props.value}\n        orientation=\"horizontal\"\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nclass WeightSlider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"weight\">\n        <HSlider onChangeCB={this.props.onChangeCB} value={this.props.value} />\n      </div>\n    )\n  }\n}\n\n\nconst RandomAdd = (props) => {\n  return (\n    <button className=\"plus\" id=\"random\" onClick={props.onClickCB} > 🎲 </button>\n  )\n}\n\n\nclass RecList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const recs = getRecommendations(this.props.all_titles,\n                                    this.props.items,\n                                    this.props.nrecs,\n                                    this.props.weight);\n    var rec_items = recs.map((item) => {\n      var x = item;\n      var score = item.score;\n      var item = item.item;\n      var oc = () => this.props.addItem(item);\n      var url = \"https://www.imdb.com/title/\" + item.tconst + \"/\"\n      return (\n        <li className=\"title\" key={item.index + 100000}>\n          <button className=\"plus\" onClick={oc}> + </button>\n          <div className=\"tooltip\">\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              ({item.year}) {item.title}\n            </a>\n            <div className=\"tooltiptext\">\n              <h4>Shared People:</h4>\n              <p>{x.why_nconst.map(i => this.props.metadata.nconsts[i]).join(\", \")}</p>\n              <h4>Shared Tags:</h4>\n              <p>{x.why_tag.map(i => this.props.metadata.tags[i]).join(\", \")}</p>\n              <h4>Shared Genres:</h4>\n              <p>{x.why_genre.map(i => this.props.metadata.genres[i]).join(\", \")}</p>\n              <hr/>\n              <p>{url}</p>\n            </div>\n          </div>\n        </li>\n      );\n    })\n\n    return (\n      <div>\n        <h2>What you might like:</h2>\n        <ul className=\"results\">\n          {rec_items}\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: Array(0),\n      weight: [100, 100, 100],\n      nrecs: 15,\n    };\n  }\n\n  getSuggestions(self, value, all=false) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    \n    if (escapedValue === '' && all) {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n\n    const matches = self.props.all_titles.filter(item => regex.test(item.title));\n    const indices = self.state.items.map((item) => item.index)\n    return matches.filter(item => indices.indexOf(item.index) < 0);\n  }\n\n  handleSelected = (item) => {\n    this.setState(state => {\n      const items = state.items.concat(item);\n      return {...state, items: items};\n    })\n  }\n\n  removeItem = (index) => {\n    this.setState(state => {\n      const items = state.items.filter(item => item.index !== index);\n      return {...state, items: items};\n    })\n  }\n\n  changeWeight = (index, value) => {\n    this.setState(state => {\n      var weight = state.weight;\n      weight[index] = value;\n      return {...state, weight: weight};\n    })\n  }\n\n  render() {\n\n    var title_items = this.state.items.map((item) => {\n      var oc = () => this.removeItem(item.index);\n      var url = \"https://www.imdb.com/title/\" + item.tconst + \"/\"\n      return (\n        <li className=\"title\" key={item.index}>\n          <button className=\"minus\" onClick={oc}> x </button>\n          <div className=\"tooltip\">\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              ({item.year}) {item.title}\n            </a>\n            <div className=\"tooltiptext\">\n              <h4>People:</h4>\n              <p>{item.nconst_enc.map(i => this.props.metadata.nconsts[i]).join(\", \")}</p>\n              <h4>Tags:</h4>\n              <p>{item.tags_enc.map(i => this.props.metadata.tags[i]).join(\", \")}</p>\n              <h4>Genres:</h4>\n              <p>{item.genres_enc.map(i => this.props.metadata.genres[i]).join(\", \")}</p>\n              <hr/>\n              <p>{url}</p>\n            </div>\n          </div>\n        </li>\n      )\n    })\n    \n    return (\n      <div>\n        <div className=\"ui_section\">\n          <h2>What do you like?</h2>\n          <TitleInput id=\"title\"\n            onSelected={(value) => this.handleSelected(value)}\n            getSuggestions={(value) => this.getSuggestions(this, value)}\n          />\n          <ul>\n            {title_items}\n          </ul>\n          <h2>How do you want it?</h2>\n          <div className=\"weight\">People</div>\n          <div className=\"weight\">Tags</div>\n          <div className=\"weight\">Genres</div>\n          <br />\n          <WeightSlider\n            onChangeCB={value => this.changeWeight(2, value)}\n            value={this.state.weight[2]} />\n          <WeightSlider\n            onChangeCB={value => this.changeWeight(0, value)}\n            value={this.state.weight[0]} />\n          <WeightSlider\n            onChangeCB={value => this.changeWeight(1, value)}\n            value={this.state.weight[1]} />\n        </div>\n        <div className=\"ui_section\">\n          <RecList\n            all_titles={this.props.all_titles}\n            items={this.state.items}\n            nrecs={this.state.nrecs}\n            weight={this.state.weight}\n            addItem={(item) => this.handleSelected(item)}\n            metadata={this.props.metadata}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all_titles: Array(0),\n      metadata: {},\n    }\n  }\n  componentDidMount() {\n    var prefix = (process.env.NODE_ENV === 'development') ? \n      'data/' : 'https://zgana-app-data.s3.us-east-2.amazonaws.com/movie-recommendations/';\n    fetch(`${prefix}titles.json`)\n      .then(titles => titles.json())\n      .then((titles) => {\n        fetch(`${prefix}metadata.json`)\n        .then(metadata => metadata.json())\n        .then(metadata => this.setState({metadata: metadata, all_titles: titles}))\n      })\n      .catch(err => { throw err });\n  }\n  render() {\n    return (\n      <Main all_titles={this.state.all_titles} metadata={this.state.metadata} />\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}